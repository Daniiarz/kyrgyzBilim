version: "3.8"

services:
  reverse-proxy:
    image: traefik:v2.2
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./config/traefik.yaml:/etc/traefik/traefik.yaml

  postgres:
    image: postgres:12-alpine
    container_name: postgres_bilim
    ports:
      - "5555:5432"
    environment:
      - POSTGRES_PASSWORD=dbCXeDTR5vFhZkxRCq
      - POSTGRES_DB=kyrgyzBilim
      - POSTGRES_USER=kyrgyzBilim
    volumes:
      - postgres-data:/var/lib/postgresql/data
    restart: always

  app:
    build:
      target: builder
      context: app/
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.app.entrypoints=http"
      - "traefik.http.routers.app.rule=Host(`localhost`)"
      - "traefik.http.services.app.loadbalancer.server.port=8080"
    env_file:
      - .env
    volumes:
      - ./app:/go/src/app
      - media:/go/src/app/media/
    depends_on:
      - postgres
      - reverse-proxy
    command: reflex -r "\.go$$" -s -- sh -c "go run ./"

  admin:
    build:
      context: admin/
    volumes:
      - ./admin:/usr/src/admin/
      - static:/usr/src/admin/static/
      - media:/usr/src/admin/media/
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.admin.entrypoints=http"
      - "traefik.http.routers.admin.rule=Host(`localhost`) && PathPrefix(`/admin`)"
      - "traefik.http.services.admin.loadbalancer.server.port=8000"
    env_file:
      - .env
    command: sh -c "python manage.py collectstatic --noinput && python manage.py runserver 0.0.0.0:8000"

  nginx:
    image: nginx:alpine
    volumes:
      - media:/usr/share/nginx/html/media
      - static:/usr/share/nginx/html/static
      - ./config/static_server.nginx:/config/nginx/site-confs/default
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nginx.entrypoints=http"
      - "traefik.http.routers.nginx.rule=Host(`localhost`) && PathPrefix(`/media`, `/static`)"
      - "traefik.http.services.nginx.loadbalancer.server.port=80"

volumes:
  postgres-data:
  media:
  static:
