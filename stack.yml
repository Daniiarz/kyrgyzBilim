version: "3.8"

services:
  traefik:
    image: traefik:v2.2
    ports:
      - 80:80
      - 443:443
      - 8080:8080
    configs:
      - source: traefik-config
        target: /etc/traefik/traefik.yaml
    deploy:
      replicas: 1
      restart_policy:
        condition: always


  nginx:
    image: nginx:apline
    networks:
      - overlay
    deploy:
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.nginx.entrypoints=http"
        - "traefik.http.routers.nginx.rule=Host(`165.22.90.163`) && PathPrefix(`/media`, `/static`)"
        - "traefik.http.services.nginx.loadbalancer.server.port=80"
      restart_policy:
        condition: on-failure
      replicas: 1

  app:
    image: registry.digitalocean.com/kyrgyz-bilim-registry/kyrgyz-bilim-api/api:latest
    networks:
      - overlay
    volumes:
      - media:/
    deploy:
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.app.entrypoints=http"
        - "traefik.http.routers.app.rule=Host(`165.22.90.163`)"
        - "traefik.http.services.app.loadbalancer.server.port=8080"
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 10s

  db:
    image: postgres:12-alpine
    networks:
      - overlay
    deploy:
      restart_policy:
        condition: always
    volumes:
      - postgres-data:/var/lib/postgresql/data

  admin:
    image:
    networks:
      - overlay
    deploy:
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.admin.entrypoints=http"
        - "traefik.http.routers.admin.rule=Host(`165.22.90.163`) && PathPrefix(`/admin`)"
        - "traefik.http.services.admin.loadbalancer.server.port=8000"
      replicas: 1
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 10s

networks:
  overlay:
    driver: overlay

volumes:
  postgres-data:
    driver: overlay2

configs:
  traefik-config:
    file: config/traefik.yaml
  nginx-config:
    file: config/static_server.nginx
